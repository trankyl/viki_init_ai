
Lors du redéploiement d’une ressource existante en mode incrémentiel, toutes les propriétés sont réappliquées. Les propriétés ne sont pas ajoutées de manière incrémentielle. On pense souvent à tort que les propriétés qui ne sont pas spécifiées dans le modèle restent inchangées. Si vous omettez de spécifier certaines propriétés, Resource Manager interprète le déploiement comme un remplacement de ces valeurs. Les propriétés qui ne sont pas incluses dans le modèle sont réinitialisées aux valeurs par défaut. Spécifiez toutes les valeurs non définies par défaut pour la ressource et pas seulement celles que vous mettez à jour. La définition de la ressource dans le modèle contient toujours l’état final de la ressource. Elle ne peut pas représenter une mise à jour partielle d’une ressource existante.

===================



resource defaultTelemetry 'Microsoft.Resources/deployments@2021-04-01' = if (enableDefaultTelemetry) {
  name: 'pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-${uniqueString(deployment().name, location)}'
  properties: {
    mode: 'Incremental'
    template: {
      '$schema': 'https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#'
      contentVersion: '1.0.0.0'
      resources: []
    }
  }
}

===============================

az deployment sub ${{ parameters['deployOperation'] }} \

===================

Incremental deployments add new resources to your existing environment, while full deployments replace all existing resources with new ones. Incremental deployments are best suited when you need to add new resources to an existing environment without affecting the existing resources. For example, you can use an incremental deployment to add a new virtual machine to your environment.

=====================

Before we start with explaining the Bicep deployment mode, it is essential to note that Bicep doesn’t have the concept of destroy command like Terraform.

================

How Bicep Modules Work?
Great, now we know how to create and use a simple module in Bicep. But how does Bicep handle it and what is the resulting ARM template? These are good questions worth discussing.

The main point is that Bicep module gets compiled into a nested deployment resource with type Microsoft.Resources/deployments and Incremental deployment mode.

The ARM template below is the result of building main.bicep file from the previous section Bicep Modules 101. As a result, we get a template with Microsoft.Resources/deployments resource. Here are a few notes about it:


===================

azure-pipeline\config\variables\cei-perimetre.yml

  # Tags communs aux groupe de ressources et ressource du hub
  var-platform-perimetre-rgtags: '$(var-common-prod-rgtags)'
  var-platform-perimetre-rtags: '$(var-common-prod-rgtags)'

=========================


C:\Users\mvead01\OneDrive - Gouv Qc\repos\ApplyEtiquetteV22Az\CEI-Azure-Zone-Accueil\Doc\tags.md

======================

Adelphe-Patrick.Mveng-Mindang@azexplorer.onmicrosoft.com
Mcn2023!

================

18-07-2023
ajout du tag "tags": "$(var-platform-perimetre-rtags)" , sur les propriétés d'un application gateway


==================

correctif


  var-platform-perimetre-appGateway: >
    {
      "name": "agw-$(var-platform-perimetre-name-suffix)",
      "resourceGroup": "'$(var-platform-perimetre-agw-rg-name)'",
      "publicIP": {
        "name": "pipagw-$(var-platform-perimetre-name-suffix)",
        "resourceGroup": "'$(var-platform-perimetre-agw-rg-name)'",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static"
        },
        "zones": [],
        "tags": $(var-platform-perimetre-rtags)
      },
      "minCapacity": 2,
      "maxCapacity": 10,
      "frontendPort": 80,
      "backendPort": 80,
      "backendIPAddresses": [],
      "cookieBasedAffinity": "Disabled",
      "sku": {
        "name": "Standard_v2",
        "tier": "Standard_v2"
      },
      "tags": $(var-platform-perimetre-rtags)
    }

==============================

$(var-platform-hub-rtags)

$(var-platform-gestion-rtags)

$(var-platform-identite-rtags)

================


ajout "tags": $(var-platform-hub-rtags) dans variable   var-platform-hub-nsgList
, afin de déployer effectivement tous les tags requis sur chaue NSG dans spoke Hub

ajout "tags": $(var-platform-hub-rtags) dans variable   var-platform-hub-virtualNetwork
, afin de déployer effectivement tous les tags requis sur virtualNetwork dans spoke Hub

ajout "tags": $(var-platform-hub-rtags) dans variable   var-platform-hub-privateDNS
, afin de déployer effectivement tous les tags requis sur privateDNS dans spoke Hub

- deploiement Zone DNS privée avec étiquette sur version 2.2

- ajout "tags": $(var-platform-hub-rtags) dans variable   var-platform-hub-privateDnsresolver
, afin de déployer effectivement tous les tags requis sur privateprivateDnsresolver dans spoke Hub

- ajout "tags": $(var-platform-hub-rtags) dans variable   var-platform-hub-firewall
, afin de déployer effectivement tous les tags requis sur firewall dans spoke Hub

- ajout "tags": $(var-platform-hub-rtags) dans variable    var-platform-hub-bastionHost
, afin de déployer effectivement tous les tags requis sur bastionHost dans spoke Hub

- ajout "tags": $(var-platform-hub-rtags) dans variable    var-platform-hub-vpn
, afin de déployer effectivement tous les tags requis sur VPN Gateway dans spoke Hub

- ajout "tags": $(var-platform-hub-rtags) dans variable  var-platform-hub-recoveryServicesVault
, afin de déployer effectivement tous les tags requis sur Coffre Recovery Services dans spoke Hub

- ajout "tags": $(var-platform-hub-rtags) dans variable  var-platform-hub-expressRoute
, afin de déployer effectivement tous les tags requis sur Express Route dans spoke Hub

- ajout "tags": $(var-platform-gestion-rtags) dans variable  var-platform-gestion-logAnalyticsSTA
, afin de déployer effectivement tous les tags requis sur Espace de travail Log Analytics dans spoke Gestion

- ajout "tags": $(var-platform-gestion-rtags) dans variable var-platform-gestion-logAnalyticsWorkspace
, afin de déployer effectivement tous les tags requis sur Espace de travail Log Analytics de die a l exploitation dans spoke Gestion

- ajout "tags": $(var-platform-gestion-rtags) dans variable var-platform-gestion-bastionHost
, afin de déployer effectivement tous les tags requis sur bastion dans spoke Gestion

- ajout "tags": $(var-platform-gestion-rtags) dans variable var-platform-gestion-virtualNetwork
, afin de déployer effectivement tous les tags requis sur virtualNetwork dans spoke Gestion

- ajout "tags": $(var-platform-gestion-rtags) dans variable   var-platform-gestion-recoveryServicesVault: >
, afin de déployer effectivement tous les tags requis sur recoveryServicesVault dans spoke Gestion

- ajout "tags": $(var-platform-gestion-rtags) dans variable   var-platform-gestion-keyVault: >
, afin de déployer effectivement tous les tags requis sur keyvault dans spoke Gestion

================

var-platform-perimetre-rtags

===================

- ajout "tags": $(var-platform-identite-rtags) dans variable   var-platform-identite-virtualNetwork
, afin de déployer effectivement tous les tags requis sur virtualNetwork dans spoke Identite


- ajout "tags": $(var-platform-identite-rtags) dans variable  var-platform-identite-recoveryServicesVault
, afin de déployer effectivement tous les tags requis sur recoveryServicesVault dans spoke Identite

- ajout "tags": $(var-platform-identite-rtags) dans variable var-platform-identite-keyVault
, afin de déployer effectivement tous les tags requis sur coffre a secret dans spoke Identite


- ajout "tags": $(var-platform-identite-rtags) dans variable var-platform-identite-nsg-list
, afin de déployer effectivement tous les tags requis sur chaque NSG dans spoke Identite


- ajout "tags": $(var-platform-perimetre-rtags) dans variable var-platform-perimetre-nsgList
, afin de déployer effectivement tous les tags requis sur chaque NSG dans spoke Perimetre


- ajout "tags": $(var-platform-perimetre-rtags) dans variable var-platform-perimetre-virtualNetwork
, afin de déployer effectivement tous les tags requis sur virtualNetwork dans spoke Perimetre


- ajout "tags": $(var-platform-perimetre-rtags) dans variable var-platform-perimetre-firewall
, afin de déployer effectivement tous les tags requis sur firewall dans spoke Perimetre




- ajout "tags": $(var-platform-hub-rtags) 
, afin de déployer effectivement tous les tags requis sur NSG nsg-platform-hub-fg-mgmt-001 dans spoke Hub


- ajout "tags": $(var-platform-hub-rtags) 
, afin de déployer effectivement tous les tags requis sur NSG nsg-platform-hub-fg-int-001 dans spoke Hub

- ajout "tags": $(var-platform-hub-rtags) 
, afin de déployer effectivement tous les tags requis sur NSG nsg-platform-hub-fg-ext-001 dans spoke Hub

- Dans scénario de base , ajout "tags": $(var-platform-hub-rtags) dans variable var-platform-hub-routeTable
, afin de déployer effectivement tous les tags requis sur routeTable dans spoke Hub

- Dans scénario de base , ajout "tags": $(var-platform-gestion-rtags) dans variable var-platform-gestion-routeTable , afin de déployer effectivement tous les tags requis sur routeTable dans spoke Gestion

- Dans scénario de base , ajout "tags": $(var-platform-identite-rtags) dans variable var-platform-identite-routeTable , afin de déployer effectivement tous les tags requis sur routeTable dans spoke Identite


- Dans scénario complexe, ajout "tags": $(var-platform-hub-rtags) dans variable var-platform-hub-routeTable
, afin de déployer effectivement tous les tags requis sur routeTable dans spoke Hub

- Dans scénario complexe, , ajout "tags": $(var-platform-gestion-rtags) dans variable var-platform-gestion-routeTable , afin de déployer effectivement tous les tags requis sur routeTable dans spoke Gestion

- Dans scénario complexe, , ajout "tags": $(var-platform-identite-rtags) dans variable var-platform-identite-routeTable , afin de déployer effectivement tous les tags requis sur routeTable dans spoke Identite



